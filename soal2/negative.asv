function negative(app, inputImg)

    inputImg = imread(inputImg);
    
    
    % Konversi ke grayscale jika RGB
    % if ndims(inputImg) == 3
    %     inputImg = rgb2gray(inputImg);
    % end
    
    % Konversi ke tipe double untuk perhitungan
    inputImg = im2double(inputImg)*255 ;
    [M, N, C] = size(inputImg);

    % Buat matriks output (sama ukuran)
    outputImg = zeros(M, N, C);

    % === Versi loop seperti di C ===
    for i = 1:M
        for j = 1:N
            for k = 1:C
                outputImg(i, j, k) = 255 - inputImg(i, j, k);
            end
        end
    end

    % Reverse output (negatif dari negatif)
    reverseOutputImg = 255 - outputImg;

    % Simpan sementara
    imwrite(uint8(outputImg), 'temp.png');
    imwrite(uint8(reverseOutputImg), 'tempreverse.png');

    % Tampilkan gambar dan histogram
    app.outputImage.ImageSource = 'temp.png';
    plot(app.outputHist, imhist(uint8(outputImg)));

    app.outputImage2.ImageSource = 'tempreverse.png';
    plot(app.outputHist2, imhist(uint8(reverseOutputImg)));

    % Tampilkan semua komponen
    app.outputHist.Visible = 'on';
    app.outputImage.Visible = 'on';
    app.outputImageLabel.Visible = 'on';
    
    app.outputHist2.Visible = 'on';
    app.outputImage2.Visible = 'on';
    app.outputImageLabel2.Visible = 'on';
end
